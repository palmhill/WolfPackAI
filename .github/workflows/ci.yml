name: CI - Build AppHost

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Build solution (or all projects if no .sln)
        shell: bash
        run: |
          set -euo pipefail
          if ls *.sln 1> /dev/null 2>&1; then
            SOLUTION=$(ls -1 *.sln | head -n 1)
            echo "Building solution: $SOLUTION"
            dotnet restore "$SOLUTION"
            dotnet build "$SOLUTION" -c Release --no-restore
          else
            echo "No .sln found; building all projects"
            shopt -u dotglob
            shopt -s globstar nullglob
            projects=(**/*.csproj)
            if [ ${#projects[@]} -eq 0 ]; then
              echo "No .csproj files found" >&2
              exit 1
            fi
            echo "Restoring ${#projects[@]} projects"
            for p in "${projects[@]}"; do
              dotnet restore "$p"
            done
            echo "Building ${#projects[@]} projects"
            for p in "${projects[@]}"; do
              dotnet build "$p" -c Release --no-restore
            done
          fi

      - name: Publish (framework-dependent)
        shell: bash
        run: |
          set -euo pipefail
          OUT_DIR="$GITHUB_WORKSPACE/out"
          mkdir -p "$OUT_DIR"
          echo "Publishing WolfPackAI.AppHost to $OUT_DIR (framework-dependent)"
          dotnet publish WolfPackAI.AppHost/WolfPackAI.AppHost.csproj \
            -c Release \
            -p:ContinuousIntegrationBuild=true \
            -o "$OUT_DIR"
          echo "Publish completed. Contents of $OUT_DIR:"
          ls -la "$OUT_DIR" || true

      - name: Archive artifact
        shell: bash
        run: |
          set -euo pipefail
          OUT_DIR="$GITHUB_WORKSPACE/out"
          echo "Zipping from $OUT_DIR"
          if [ ! -d "$OUT_DIR" ] || [ -z "$(ls -A "$OUT_DIR")" ]; then
            echo "Publish output missing or empty: $OUT_DIR"; exit 1
          fi
          cd "$OUT_DIR"
          zip -r "$GITHUB_WORKSPACE/WolfPackAI.AppHost.zip" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: WolfPackAI.AppHost
          path: WolfPackAI.AppHost.zip
          if-no-files-found: error
